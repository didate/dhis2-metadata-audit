package com.didate.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OptionGroupAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOptionGroupAllPropertiesEquals(OptionGroup expected, OptionGroup actual) {
        assertOptionGroupAutoGeneratedPropertiesEquals(expected, actual);
        assertOptionGroupAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOptionGroupAllUpdatablePropertiesEquals(OptionGroup expected, OptionGroup actual) {
        assertOptionGroupUpdatableFieldsEquals(expected, actual);
        assertOptionGroupUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOptionGroupAutoGeneratedPropertiesEquals(OptionGroup expected, OptionGroup actual) {
        assertThat(expected)
            .as("Verify OptionGroup auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOptionGroupUpdatableFieldsEquals(OptionGroup expected, OptionGroup actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOptionGroupUpdatableRelationshipsEquals(OptionGroup expected, OptionGroup actual) {}
}
