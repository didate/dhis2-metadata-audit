package com.didate.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DHISUserAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDHISUserAllPropertiesEquals(DHISUser expected, DHISUser actual) {
        assertDHISUserAutoGeneratedPropertiesEquals(expected, actual);
        assertDHISUserAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDHISUserAllUpdatablePropertiesEquals(DHISUser expected, DHISUser actual) {
        assertDHISUserUpdatableFieldsEquals(expected, actual);
        assertDHISUserUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDHISUserAutoGeneratedPropertiesEquals(DHISUser expected, DHISUser actual) {
        assertThat(expected)
            .as("Verify DHISUser auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDHISUserUpdatableFieldsEquals(DHISUser expected, DHISUser actual) {
        assertThat(expected)
            .as("Verify DHISUser relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDisplayName()).as("check displayName").isEqualTo(actual.getDisplayName()))
            .satisfies(e -> assertThat(e.getUsername()).as("check username").isEqualTo(actual.getUsername()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDHISUserUpdatableRelationshipsEquals(DHISUser expected, DHISUser actual) {}
}
